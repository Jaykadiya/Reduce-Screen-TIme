package com.android.reducescreentime;


import android.Manifest;
import android.annotation.SuppressLint;
import android.app.DownloadManager;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;

import com.itextpdf.io.image.ImageData;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Image;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.HorizontalAlignment;
import com.itextpdf.layout.property.TextAlignment;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Locale;

public class GenerateReport extends AppCompatActivity {

    EditText Name, Age, HUA, Percent;
    Button GR;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.greport);
        Name = findViewById(R.id.editTextName);
        Age = findViewById(R.id.editTextAge);
        HUA = findViewById(R.id.editTextHUA);
        Percent = findViewById(R.id.percent);
        GR = findViewById(R.id.button);

        ActivityCompat.requestPermissions(GenerateReport.this,new String[]{
                        Manifest.permission.READ_EXTERNAL_STORAGE,
                        Manifest.permission.WRITE_EXTERNAL_STORAGE
                },
                1
        );

        GR.setOnClickListener(new View.OnClickListener() {
            @RequiresApi(api = Build.VERSION_CODES.M)
            @Override
            public void onClick(View view) {
                String name = Name.getText().toString();
                String age = Age.getText().toString();
                String hua = HUA.getText().toString();
                String percent = Percent.getText().toString();


                try {
                    createPdf(name, age, hua, percent);
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                    Toast.makeText(GenerateReport.this, "Report file already exist, please delete the report then you can generate new Report!!! ", Toast.LENGTH_SHORT).show();


                }


            }
        });



    }




    private void createPdf(String name, String age, String hua, String percent) throws FileNotFoundException {

        String pdfPath = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).toString();
        File file = new File(pdfPath, "Report.pdf");
        OutputStream outputStream = new FileOutputStream(file);

        PdfWriter writer = new PdfWriter(String.valueOf(file));
        PdfDocument pdfDocument = new PdfDocument(writer);
        Document document = new Document(pdfDocument);

        pdfDocument.setDefaultPageSize(PageSize.A6);
        document.setMargins(0, 0, 0, 0);


        Drawable d = getDrawable(R.drawable.rs);
        Bitmap bitmap = ((BitmapDrawable) d).getBitmap();
        ByteArrayOutputStream stream = new ByteArrayOutputStream();
        bitmap.compress(Bitmap.CompressFormat.PNG, 100, stream);
        byte[] bitmapData = stream.toByteArray();

        ImageData imageData = ImageDataFactory.create(bitmapData);

        Image image = new Image(imageData);
        image.scaleAbsolute(65f, 50f);
        image.setHorizontalAlignment(HorizontalAlignment.CENTER);

        Paragraph usageReport = new Paragraph("Usage Report").setBold().setFontSize(20).setTextAlignment(TextAlignment.CENTER);
        Paragraph goup = new Paragraph("generated by Reduce Screen Time App,").setTextAlignment(TextAlignment.CENTER).setFontSize(12);
        Paragraph guj = new Paragraph("from Ahmedabad, Gujarat!!!").setBold().setFontSize(12).setTextAlignment(TextAlignment.CENTER);

        float[] width = {75f, 75f};
        Table table = new Table(width);
        table.setHorizontalAlignment(HorizontalAlignment.CENTER);


        table.addCell(new Cell().add(new Paragraph("Name:")));
        table.addCell(new Cell().add(new Paragraph(name)));


        table.addCell(new Cell().add(new Paragraph("Age:")));
        table.addCell(new Cell().add(new Paragraph(age)));


        table.addCell(new Cell().add(new Paragraph("Highest used application:")));
        table.addCell(new Cell().add(new Paragraph(hua)));


        table.addCell(new Cell().add(new Paragraph("Highest used application Percentage")));
        table.addCell(new Cell().add(new Paragraph(percent +"%")));

        DateTimeFormatter dateFormatter = null;
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        }

        table.addCell(new Cell().add(new Paragraph("Date:")));
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            table.addCell(new Cell().add(new Paragraph(LocalDate.now().format(dateFormatter).toString())));
        }


        DateTimeFormatter timeFormatter = null;
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss a");
        }
        table.addCell(new Cell().add(new Paragraph("Time:")));
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            table.addCell(new Cell().add(new Paragraph(LocalTime.now().format(timeFormatter).toString())));
        }

        Paragraph P1 = new Paragraph("Resultant Tip:").setBold().setFontSize(18).setTextAlignment(TextAlignment.CENTER);
        Paragraph P2 = new Paragraph("You have to Reduce Screen Time of " + hua + " application!!!").setBold().setFontSize(12).setTextAlignment(TextAlignment.CENTER);


        document.add(image);
        document.add(usageReport);
        document.add(goup);
        document.add(guj);
        document.add(table);
        document.add(P1);
        document.add(P2);


        document.close();
        Toast.makeText(this, "Report Generated Sucessfully !!!", Toast.LENGTH_SHORT).show();
        Toast.makeText(this, "Please go on Downloads folder from internal storage of file manager!!", Toast.LENGTH_SHORT).show();



    }
}
